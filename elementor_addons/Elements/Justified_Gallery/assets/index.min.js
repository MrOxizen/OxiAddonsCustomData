'use strict';
window.Shortcode = window.Shortcode || {};
(function($, Shortcode, w) {
    var $window = $(w);
    $.fn.getShortcodeSettings = function() {
        return this.data('happy-settings');
    };

    function SainitFilterable($scope, filterFn) {
        var $filterable = $scope.find('.sa-el-js-gallery-filter');
        if ($filterable.length) {
            $filterable.on('click', 'button', function(event) {
                event.stopPropagation();
                var $current = $(this);
                $current
                    .parent()
                    .addClass('sa-el-filter-active')
                    .siblings()
                    .removeClass('sa-el-filter-active');
                filterFn($current.data('filter'));
            });
        }
    }

    Shortcode.SainitJustifiedGallery = function($scope) {
        var $item = $scope.find('.sa-el-js-justified-gallery'),
            settings = $item.getShortcodeSettings();
        $item.justifiedGallery($.extend({}, {
            rowHeight: 150,
            lastRow: 'justify',
            margins: 10,
        }, settings));
        SainitFilterable($scope, function(filter) {
            $item.justifiedGallery({
                lastRow: (filter === '*' ? settings.lastRow : 'nojustify'),
                filter: filter
            });
        });
    };
    $window.on('elementor/frontend/init', function() {
        elementorFrontend.hooks.addAction(
            'frontend/element_ready/sa_el_justified_gallery.default',
            Shortcode.SainitJustifiedGallery
        );

    });

}(jQuery, Shortcode, window));